name: Deploy HIV Crisis Support Platform

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  NEXT_PUBLIC_APP_NAME: "HIV Crisis Support - Cameroon"
  NEXT_PUBLIC_APP_VERSION: "1.0.0"

jobs:
  # Quality checks
  quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type checking
      run: npm run type-check
      
    - name: Lint code
      run: npm run lint
      
    - name: Security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for vulnerabilities
      run: |
        npm audit --audit-level=high --production
        if [ $? -ne 0 ]; then
          echo "High severity vulnerabilities found!"
          exit 1
        fi

  # Build and test
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
        NEXT_PUBLIC_ENVIRONMENT: production
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          .next/
          public/
          package.json
          package-lock.json
        retention-days: 1

  # Deploy to Vercel (Production)
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [quality, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./

  # Deploy to Netlify (Backup)
  deploy-netlify:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [quality, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for Netlify
      run: npm run build
      env:
        NEXT_PUBLIC_APP_URL: ${{ secrets.NETLIFY_APP_URL }}
        NEXT_PUBLIC_ENVIRONMENT: production
        
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './out'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Security scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Performance testing
  lighthouse:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    needs: deploy-vercel
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Wait for deployment
      run: sleep 60
      
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          ${{ secrets.NEXT_PUBLIC_APP_URL }}
          ${{ secrets.NEXT_PUBLIC_APP_URL }}/crisis-support
          ${{ secrets.NEXT_PUBLIC_APP_URL }}/medical-support
        uploadArtifacts: true
        temporaryPublicStorage: true

  # Notify on deployment
  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-netlify]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy-vercel.result }}" == "success" ]; then
          echo "✅ Vercel deployment successful"
        else
          echo "❌ Vercel deployment failed"
        fi
        
        if [ "${{ needs.deploy-netlify.result }}" == "success" ]; then
          echo "✅ Netlify deployment successful"
        else
          echo "❌ Netlify deployment failed"
        fi
